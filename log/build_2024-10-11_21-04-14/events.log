[0.000000] (-) TimerEvent: {}
[0.000987] (snowplow_motor_controller) JobQueued: {'identifier': 'snowplow_motor_controller', 'dependencies': OrderedDict()}
[0.001287] (snowplow_motor_controller) JobStarted: {'identifier': 'snowplow_motor_controller'}
[0.099149] (-) TimerEvent: {}
[0.181838] (snowplow_motor_controller) JobProgress: {'identifier': 'snowplow_motor_controller', 'progress': 'cmake'}
[0.183565] (snowplow_motor_controller) JobProgress: {'identifier': 'snowplow_motor_controller', 'progress': 'build'}
[0.185718] (snowplow_motor_controller) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ros2_ws/src/ros2_control_demos/example_2/build/snowplow_motor_controller', '--', '-j8', '-l8'], 'cwd': '/home/ros2_ws/src/ros2_control_demos/example_2/build/snowplow_motor_controller', 'env': OrderedDict([('HOSTNAME', '346e2ffa0d71'), ('GIT_ASKPASS', '/root/.vscode-server/bin/d78a74bcdfad14d5d3b1b782f87255d802b57511/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('BROWSER', '/root/.vscode-server/bin/d78a74bcdfad14d5d3b1b782f87255d802b57511/bin/helpers/browser.sh'), ('HOME', '/root'), ('OLDPWD', '/home/ros2_ws/src/ros2_control_demos'), ('TERM_PROGRAM_VERSION', '1.94.0'), ('VSCODE_IPC_HOOK_CLI', '/tmp/vscode-ipc-038eb873-2eb2-4a12-99be-b1f143d8d8ba.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/root/.vscode-server/bin/d78a74bcdfad14d5d3b1b782f87255d802b57511/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/root/.vscode-server/bin/d78a74bcdfad14d5d3b1b782f87255d802b57511/node'), ('COLORTERM', 'truecolor'), ('REMOTE_CONTAINERS', 'true'), ('_colcon_cd_root', '/opt/ros/iron/'), ('ROS_DISTRO', 'humble'), ('REMOTE_CONTAINERS_IPC', '/tmp/vscode-remote-containers-ipc-aec784cd-7163-4717-a210-1c84c1d01f3a.sock'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/root/.vscode-server/bin/d78a74bcdfad14d5d3b1b782f87255d802b57511/bin/remote-cli:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('REMOTE_CONTAINERS_SOCKETS', '["/root/.gnupg/S.gpg-agent"]'), ('DISPLAY', '172.20.48.1:0.0'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/tmp/vscode-git-c663708130.sock'), ('TERM_PROGRAM', 'vscode'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('SHELL', '/bin/bash'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/home/ros2_ws/src/ros2_control_demos/example_2/build/snowplow_motor_controller'), ('LC_ALL', 'C.UTF-8'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/opt/ros/humble')]), 'shell': False}
[0.199368] (-) TimerEvent: {}
[0.300025] (-) TimerEvent: {}
[0.317721] (snowplow_motor_controller) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target snowplow_motor_controller\x1b[0m\n'}
[0.382792] (snowplow_motor_controller) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/snowplow_motor_controller.dir/hardware/diffbot_system.cpp.o\x1b[0m\n'}
[0.400226] (-) TimerEvent: {}
[0.500728] (-) TimerEvent: {}
[0.601292] (-) TimerEvent: {}
[0.701702] (-) TimerEvent: {}
[0.802191] (-) TimerEvent: {}
[0.902760] (-) TimerEvent: {}
[1.003386] (-) TimerEvent: {}
[1.103935] (-) TimerEvent: {}
[1.204450] (-) TimerEvent: {}
[1.304969] (-) TimerEvent: {}
[1.405575] (-) TimerEvent: {}
[1.506195] (-) TimerEvent: {}
[1.606764] (-) TimerEvent: {}
[1.707343] (-) TimerEvent: {}
[1.807908] (-) TimerEvent: {}
[1.908451] (-) TimerEvent: {}
[2.008914] (-) TimerEvent: {}
[2.109429] (-) TimerEvent: {}
[2.209999] (-) TimerEvent: {}
[2.310530] (-) TimerEvent: {}
[2.411163] (-) TimerEvent: {}
[2.511759] (-) TimerEvent: {}
[2.612310] (-) TimerEvent: {}
[2.712835] (-) TimerEvent: {}
[2.813445] (-) TimerEvent: {}
[2.914016] (-) TimerEvent: {}
[3.011411] (snowplow_motor_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/diffbot_system.hpp:35\x1b[m\x1b[K,\n'}
[3.011793] (snowplow_motor_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/diffbot_system.cpp:15\x1b[m\x1b[K:\n'}
[3.011963] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::string Hdc2460Comms::enumerate_port()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.012163] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:29:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kregex\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.012320] (snowplow_motor_controller) StderrLine: {'line': b'   29 |       std::\x1b[01;31m\x1b[Kregex\x1b[m\x1b[K manufacture("(Prolific)(.*)");\n'}
[3.012469] (snowplow_motor_controller) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.014175] (-) TimerEvent: {}
[3.019388] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:30:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kserial\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Km_serial\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.019948] (snowplow_motor_controller) StderrLine: {'line': b'   30 |       std::vector<\x1b[01;31m\x1b[Kserial\x1b[m\x1b[K::PortInfo> devices = serial::list_ports();\n'}
[3.020156] (snowplow_motor_controller) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[3.020328] (snowplow_motor_controller) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Km_serial\x1b[m\x1b[K\n'}
[3.020497] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:30:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[3.020702] (snowplow_motor_controller) StderrLine: {'line': b'   30 |       std::vector<serial::PortInfo\x1b[01;31m\x1b[K>\x1b[m\x1b[K devices = serial::list_ports();\n'}
[3.020881] (snowplow_motor_controller) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.021044] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:30:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[3.021206] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:30:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kserial\x1b[m\x1b[K\xe2\x80\x99 is not a class, namespace, or enumeration\n'}
[3.021368] (snowplow_motor_controller) StderrLine: {'line': b'   30 |       std::vector<serial::PortInfo> devices = \x1b[01;31m\x1b[Kserial\x1b[m\x1b[K::list_ports();\n'}
[3.021561] (snowplow_motor_controller) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[3.021817] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:31:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 2 is invalid\n'}
[3.022081] (snowplow_motor_controller) StderrLine: {'line': b'   31 |       std::vector<serial::PortInfo\x1b[01;31m\x1b[K>\x1b[m\x1b[K::iterator ports = devices.begin();\n'}
[3.022332] (snowplow_motor_controller) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.022606] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:31:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kqualified-id in declaration before \xe2\x80\x98\x1b[01m\x1b[Kports\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.022826] (snowplow_motor_controller) StderrLine: {'line': b'   31 |       std::vector<serial::PortInfo>::iterator \x1b[01;31m\x1b[Kports\x1b[m\x1b[K = devices.begin();\n'}
[3.023047] (snowplow_motor_controller) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.035824] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:32:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kports\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kport\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.036119] (snowplow_motor_controller) StderrLine: {'line': b'   32 |       while (\x1b[01;31m\x1b[Kports\x1b[m\x1b[K != devices.end())\n'}
[3.036285] (snowplow_motor_controller) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[3.036469] (snowplow_motor_controller) StderrLine: {'line': b'      |              \x1b[32m\x1b[Kport\x1b[m\x1b[K\n'}
[3.036629] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:32:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kend\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kdevices\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.036799] (snowplow_motor_controller) StderrLine: {'line': b'   32 |       while (ports != devices.\x1b[01;31m\x1b[Kend\x1b[m\x1b[K())\n'}
[3.036950] (snowplow_motor_controller) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[3.037097] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:34:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kserial\x1b[m\x1b[K\xe2\x80\x99 is not a class, namespace, or enumeration\n'}
[3.037611] (snowplow_motor_controller) StderrLine: {'line': b'   34 |         \x1b[01;31m\x1b[Kserial\x1b[m\x1b[K::PortInfo found_port = *ports++;\n'}
[3.037830] (snowplow_motor_controller) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[3.038673] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:35:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kregex_match\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.038904] (snowplow_motor_controller) StderrLine: {'line': b'   35 |         if (std::\x1b[01;31m\x1b[Kregex_match\x1b[m\x1b[K(found_port.description.c_str(), manufacture))\n'}
[3.039062] (snowplow_motor_controller) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.054623] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:35:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kfound_port\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.054991] (snowplow_motor_controller) StderrLine: {'line': b'   35 |         if (std::regex_match(\x1b[01;31m\x1b[Kfound_port\x1b[m\x1b[K.description.c_str(), manufacture))\n'}
[3.055196] (snowplow_motor_controller) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.069533] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:35:62:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmanufacture\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.069955] (snowplow_motor_controller) StderrLine: {'line': b'   35 |         if (std::regex_match(found_port.description.c_str(), \x1b[01;31m\x1b[Kmanufacture\x1b[m\x1b[K))\n'}
[3.070221] (snowplow_motor_controller) StderrLine: {'line': b'      |                                                              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.077515] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:37:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kusb_port\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kushort\x1b[m\x1b[K\xe2\x80\x99?\n'}
[3.077887] (snowplow_motor_controller) StderrLine: {'line': b'   37 |           \x1b[01;31m\x1b[Kusb_port\x1b[m\x1b[K = found_port.port.c_str();\n'}
[3.078110] (snowplow_motor_controller) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[3.078284] (snowplow_motor_controller) StderrLine: {'line': b'      |           \x1b[32m\x1b[Kushort\x1b[m\x1b[K\n'}
[3.078453] (snowplow_motor_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ros2_ws/src/ros2_control_demos/example_2/hardware/include/snowplow_motor_controller/hdc2460_comms.hpp:40:5:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kno return statement in function returning non-void [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type\x07-Wreturn-type\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[3.078627] (snowplow_motor_controller) StderrLine: {'line': b'   40 |     \x1b[01;35m\x1b[K}\x1b[m\x1b[K\n'}
[3.078791] (snowplow_motor_controller) StderrLine: {'line': b'      |     \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.114342] (-) TimerEvent: {}
[3.214853] (-) TimerEvent: {}
[3.315385] (-) TimerEvent: {}
[3.415875] (-) TimerEvent: {}
[3.516455] (-) TimerEvent: {}
[3.617371] (-) TimerEvent: {}
[3.717909] (-) TimerEvent: {}
[3.818399] (-) TimerEvent: {}
[3.918915] (-) TimerEvent: {}
[4.019455] (-) TimerEvent: {}
[4.120057] (-) TimerEvent: {}
[4.220592] (-) TimerEvent: {}
[4.321247] (-) TimerEvent: {}
[4.421838] (-) TimerEvent: {}
[4.522375] (-) TimerEvent: {}
[4.622918] (-) TimerEvent: {}
[4.723499] (-) TimerEvent: {}
[4.824048] (-) TimerEvent: {}
[4.924692] (-) TimerEvent: {}
[5.025353] (-) TimerEvent: {}
[5.125982] (-) TimerEvent: {}
[5.226570] (-) TimerEvent: {}
[5.327230] (-) TimerEvent: {}
[5.427741] (-) TimerEvent: {}
[5.528200] (-) TimerEvent: {}
[5.628712] (-) TimerEvent: {}
[5.729272] (-) TimerEvent: {}
[5.829803] (-) TimerEvent: {}
[5.930310] (-) TimerEvent: {}
[6.030820] (-) TimerEvent: {}
[6.131370] (-) TimerEvent: {}
[6.231957] (-) TimerEvent: {}
[6.332504] (-) TimerEvent: {}
[6.433031] (-) TimerEvent: {}
[6.533647] (-) TimerEvent: {}
[6.634167] (-) TimerEvent: {}
[6.734745] (-) TimerEvent: {}
[6.835297] (-) TimerEvent: {}
[6.935788] (-) TimerEvent: {}
[7.036264] (-) TimerEvent: {}
[7.136912] (-) TimerEvent: {}
[7.237485] (-) TimerEvent: {}
[7.338108] (-) TimerEvent: {}
[7.438848] (-) TimerEvent: {}
[7.539401] (-) TimerEvent: {}
[7.639919] (-) TimerEvent: {}
[7.740429] (-) TimerEvent: {}
[7.840971] (-) TimerEvent: {}
[7.941511] (-) TimerEvent: {}
[8.042049] (-) TimerEvent: {}
[8.142485] (-) TimerEvent: {}
[8.243067] (-) TimerEvent: {}
[8.343457] (-) TimerEvent: {}
[8.414825] (snowplow_motor_controller) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/snowplow_motor_controller.dir/build.make:76: CMakeFiles/snowplow_motor_controller.dir/hardware/diffbot_system.cpp.o] Error 1\n'}
[8.415432] (snowplow_motor_controller) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/snowplow_motor_controller.dir/all] Error 2\n'}
[8.415639] (snowplow_motor_controller) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[8.418236] (snowplow_motor_controller) CommandEnded: {'returncode': 2}
[8.443651] (-) TimerEvent: {}
[8.544043] (-) TimerEvent: {}
[8.644253] (snowplow_motor_controller) JobEnded: {'identifier': 'snowplow_motor_controller', 'rc': 2}
[8.644985] (-) TimerEvent: {}
[8.655567] (-) EventReactorShutdown: {}
